name: Sync Upstream + Convert + Build Docker

on:
  schedule:
    - cron: '0 * * * *'  # 每小時觸發
  workflow_dispatch:      # 手動執行

jobs:
  sync-convert-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add and fetch upstream
        run: |
          git remote add upstream https://github.com/chatgpt-web-dev/chatgpt-web.git
          git fetch upstream
          git rebase upstream/main || git merge upstream/main

      - name: Install OpenCC
        run: sudo apt-get install -y opencc

      - name: Convert specified files to Traditional Chinese
        run: |
          FILES=(
            "service/src/chatgpt/index.ts"
            "service/src/middleware/auth.ts"
            "service/src/middleware/rootAuth.ts"
            "service/src/index.ts"
            "src/views/chat/layout/Permission.vue"
            "src/locales/zh-TW.ts"
            "service/src/utils/mail.ts"
          )
          for file in "${FILES[@]}"; do
            if [ -f "$file" ]; then
              echo "Converting $file"
              opencc -i "$file" -o "$file.converted" -c s2t.json
              mv "$file.converted" "$file"
            fi
          done

      - name: Apply manual code changes
        run: |
          # 替換預設語言
          cp src/locales/index.ts src/locales/index.ts.bak
          awk '{gsub(/appStore.language \|\| '\''zh-CN'\''/, "appStore.language || '\''zh-TW'\''"); print }' src/locales/index.ts.bak > src/locales/index.ts

          cp src/store/modules/app/helper.ts src/store/modules/app/helper.ts.bak
          awk '{gsub(/language: '\''zh-CN'\''/, "language: '\''zh-TW'\''"); print }' src/store/modules/app/helper.ts.bak > src/store/modules/app/helper.ts

          # 替換 gitCommitSha 行
          cp src/components/common/GitHubSite/index.vue src/components/common/GitHubSite/index.vue.bak
          awk '{if($0 ~ /VITE_GIT_COMMIT_HASH/) print "const gitCommitSha = (import.meta.env.VITE_GIT_COMMIT_HASH || \"\").slice(0, 7)"; else print $0}' src/components/common/GitHubSite/index.vue.bak > src/components/common/GitHubSite/index.vue

      - name: Clone custom mail templates
        run: | 
              git clone https://github.com/1030283726/chatgpt-web-mail-template.git template-repo
              rm -rf template-repo/.git

      - name: Replace mail templates
        run: cp -rf template-repo/*.html service/src/utils/templates/

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Auto: Sync upstream, convert to Traditional, apply custom mail templates" || echo "No changes to commit"
          git push origin main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/chatgpt-web:latest
            ${{ vars.DOCKERHUB_NAMESPACE }}/chatgpt-web:latest
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            RELEASE_VERSION=latest
